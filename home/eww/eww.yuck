(defwidget bar []
  (box :orientation "h"
    (left) (right)))

(defwidget left []
  (box :class "content" :orientation "h" :space-evenly false
       :valign "center" :halign "start"
    (date) (time)))

(defwidget right []
  (box :class "content" :orientation "h" :space-evenly false
       :valign "center" :halign "end"
    (battery) (hot-corner)))

(defwidget hot-corner []
  (button :class "hot-corner" :width 24 :height 24 :onclick "eww open --toggle corner-menu"))

(defwidget battery []
  (box :class "bat" bat))

(defwidget date [] (box :class "date" (dayw) (monthw) (yearw)))
(defwidget time [] (box :class "time" (timew) (meridw)))

(defwidget brightnessw [] (box :class "brightness"
  (button :class "chg-button" :onclick "brightnessctl set 10%-" (label :text "↶"))
  brightness
  (button :class "chg-button" :onclick "brightnessctl set +10%" (label :text "↷"))))

(defwidget timew [] (box :class "timestamp" time))

(defwidget meridw [] (box :class "merid" merid))
(defwidget dayw [] (box :class "day" day))
(defwidget monthw [] (box :class "month" month))
(defwidget yearw [] (box :class "year" year))

(defpoll time  :interval "1s" "date +%I:%M")
(defpoll merid :interval "1s" "date +%p")
(defpoll day   :interval "1s" "date +%d")
(defpoll month :interval "1s" "date '+%b '")
(defpoll year  :interval "1s" "date +%Y")
(defpoll bat   :interval "30s" "cat /sys/class/power_supply/BAT1/capacity")
(defpoll brightness :interval "1s" "brightnessctl get")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :stacking "bg"
  :geometry (geometry :x "0px"
                      :y "0px"
                      :width "100%"
                      :height "48px"
                      :anchor "top center")
  :exclusive "true"
  (bar))

(defwindow corner-menu
  :monitor 0
  :stacking "overlay"
  :geometry (geometry :anchor "top right"
                      :x "16px" :y "8px"
                      :width "256px"
                      :height "128px")
  (brightnessw))
